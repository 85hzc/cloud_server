1. 命令行连接数据库
    #./psql -U cloudac -d cloud_server_db
    #psql postgres     //适用于ubuntu用apt-get安装pg的场景

2. table cmds
    #\c [database name]  //切换到某数据库
    #\dt                 //show tables
    #\d [table name]     //show tables struct 
    #ALTER TABLE iot_device ADD COLUMN "gatewayId" text; //修改表，增加列
    #ALTER TABLE iot_device ADD COLUMN "manufacture" varchar(64); //修改表，增加列
    #ALTER TABLE iot_device ADD COLUMN "manufactureSN" varchar(256); //修改表，增加列
    #ALTER TABLE iot_device alter COLUMN "deviceDataModelId" set data TYPE bigint;
    #ALTER TABLE iot_device ALTER COLUMN online SET DEFAULT false;
    #ALTER TABLE iot_dev RENAME COLUMN "definition" TO "devDataModel";  //重命名表的列名
    #alter table iot_dev_datamodel add column "firmwareId" bigint;
    #alter table iot_dev_datamodel add column "pluginId" bigint;
    #alter table iot_dev_datamodel add column "vendorId" bigint;
    #alter table iot_dev_datamodel add column "devDesc" varchar(256);

    #alter table plugin_table add column "vendorId" bigint;
    #ALTER TABLE plugin_table RENAME COLUMN "newestVersion" TO "publishVersion";  //重命名表的列名
    #alter table plugin_version add column "md5" varchar(64);

    #alter table firmware_table add column "vendorId" bigint;
    #ALTER TABLE firmware_table RENAME COLUMN "newestVersion" TO "publishVersion";  //重命名表的列名
    #alter table firmware_version add column "md5" varchar(64);

3. table definition
   -----------------------------------------------------------
                            SUMMARY
   -----------------------------------------------------------
   database: cloud_server_db
   table:  
            user_table
            iot_dev_datamodel
            iot_device
            dev_user_mapping

   -----------------------------------------------------------
                            TABLES
   -----------------------------------------------------------
   CREATE TABLE user_table
   (
        "userId" bigserial PRIMARY KEY,
        "username" varchar(64),
        "password" varchar(64),
        "nickname" varchar(64),
        "email" varchar(128)
   );

   CREATE TABLE iot_dev_datamodel
   (
        "dataModelId" bigserial PRIMARY KEY,
        "devDataModel" json,
        "manufacture" varchar(64),
        "manufactureDataModelId" bigint,
        "createTime" timestamptz
   );

   CREATE TABLE iot_device
   (
        "deviceId" bigserial PRIMARY KEY,
        "deviceDataModelId" bigint REFERENCES iot_dev_datamodel ("dataModelId"),
        "deviceType" varchar(32),
        "manufacture" varchar(64),
        "manufactureSN" varchar(256),
        "gatewayId" varchar(256),
        "online" boolean DEFAULT false,
        "devData" json,
        "firstOnlineTime" timestamptz,
        "lastOnlineTime" timestamptz,
        "userId" bigint
   );

   CREATE TABLE dev_user_mapping
   (
        "deviceId" bigint REFERENCES iot_device ("deviceId"),
        "userId" bigint REFERENCES user ("userId"),
        "userDevData" json
   );
   
   CREATE TABLE plugin_table
   (
        "pluginId" bigserial PRIMARY KEY,
        "pluginName" varchar(64),
        "pluginDesc" varchar(256),
        "pluginDir" varchar(256),
        "newestVersion" varchar(32),
        "vendorId" bigint REFERENCES vendor("vendorId")

   );

   CREATE TABLE plugin_version
   (
        "pluginId" bigint REFERENCES plugin_table ("pluginId"),
        "version"  varchar(32),
        "changeLog" varchar(512),
        "fileName" varchar(64),
        "createTime"  timestamptz
   );

   CREATE TABLE gateway_plugin
   (
        "deviceId" bigint REFERENCES iot_device ("deviceId"),
        "pluginId" bigint REFERENCES plugin_table ("pluginId"),
        "version" varchar(32)
   );
   
   CREATE TABLE vendor
   (
        "vendorId" bigserial PRIMARY KEY,
        "username" varchar(64),
        "password" varchar(64),
        "email" varchar(128)
   );
   
   CREATE TABLE firmware_table
   (
        "firmwareId" bigserial PRIMARY KEY,
        "firmwareName" varchar(64),
        "firmwareDesc" varchar(256),
        "firmwareDir" varchar(256),
        "newestVersion" varchar(32),
        "vendorId" bigint REFERENCES vendor("vendorId")

   );

   CREATE TABLE firmware_version
   (
        "firmwareId" bigint REFERENCES firmware_table ("firmwareId"),
        "version"  varchar(32),
        "changeLog" varchar(512),
        "fileName" varchar(64),
        "createTime"  timestamptz
   );


      -----------------------------------------------------------
                      TABLES TEST VALUES
   -----------------------------------------------------------
   INSERT INTO user_table VALUES ('201607201508000001', 'james', 'gdyb21LQTcIANtvYMT7QVQ==', '北辰', 'jianzhi.guan@feixun.com.cn');

   INSERT INTO iot_dev_datamodel("devDataModel","manufacture","manufactureDataModelId","createTime") VALUES ('{
           "controls": [
           {
           "param": "power",
           "type": "switch",
           "displayType": "static",
           "display":"电源",
           "default": "1"
           },
           {
           "param": "line1",
           "type": "switch",
           "displayType": "customer",
           "display":"线路1",
           "cDisplay":"line1Display",
           "default": "1"
           },
           {
           "param": "line2",
           "type": "switch",
           "displayType": "customer",
           "display":"线路2",
           "cDisplay":"line2Display",
           "default": "1"
           }
   ], 
       "settings": [
       {
           "param": "name",
           "type": "text",
           "display":"设备名称",
           "default": "请输入设备别名"
       },
       {
           "param": "line1Display",
           "type": "text",
           "display":"线路1设备名",
           "default": "请输入被控制设备别名"
       },
       {
           "param": "line2Display",
           "type": "text",
           "display":"线路2设备名",
           "default": "请输入被控制设备别名"
       }
       ],
       "info": [
       {
           "param": "manufacture",
           "type": "text",
           "display" : "生产厂商"
       },
       {
           "param": "manufactureSN",
           "type": "text",
           "display" : "序列号"
       },
       {
           "param": "softwareVersion",
           "type": "text",
           "display" : "软件版本"
       }
       ]
   }', 'feixun', '12', '2003-04-12 04:05:06 America/New_York');

   INSERT INTO iot_dev_datamodel("devDataModel","manufacture","manufactureDataModelId","createTime") VALUES ('{
		    "controls": [
			{
			    "param": "power",
			    "type": "switch",
			    "displayType": "static",
			    "display":"电源",
			    "default": "1"
			},
			{
			    "param": "line1",
			    "type": "switch",
			    "displayType": "customer",
			    "display":"线路1",
			    "cDisplay":"line1Display",
			    "default": "1"
			},
			{
			    "param": "line2",
			    "type": "switch",
			    "displayType": "customer",
			    "display":"线路2",
			    "cDisplay":"line2Display",
			    "default": "1"
			}
		    ], 
		    "settings": [
			{
			    "param": "name",
			    "type": "text",
			    "display":"设备名称",
			    "default": "请输入设备别名"
			},
			{
			    "param": "line1Display",
			    "type": "text",
			    "display":"线路1设备名",
			    "default": "请输入被控制设备别名"
			},
			{
			    "param": "line2Display",
			    "type": "text",
			    "display":"线路2设备名",
			    "default": "请输入被控制设备别名"
			}
		    ],
		    "info": [
			{
			    "param": "manufactureSN",
			    "type": "text",
			    "display" : "序列号"
			},
			{
			    "param": "softwareVersion",
			    "type": "text",
			    "display" : "软件版本"
			}
		    ]
       }', 'feixun', '13', '2003-04-12 04:05:06 America/New_York');


   INSERT INTO iot_device("deviceId","deviceDataModelId","manufacture","manufactureSN",online,"devData","firstOnlineTime","lastOnlineTime","userId") 
   VALUES ('201607201508000001', '1', 'haha', 'HAHA00000001', 'true', '{
			"name" : "卧室",
			"power" : "1",
			"manufacture" : "feixun",
			"softwareVersion": "V1.0.0"
   }', '2003-04-12 04:05:06 America/New_York','2003-04-12 04:05:06 America/New_York', '201607201508000001');
   
   INSERT INTO iot_device("deviceId","deviceDataModelId","manufacture","manufactureSN",online,"devData","firstOnlineTime","lastOnlineTime","userId") 
   VALUES ('201607201508000002', '2', 'feixun', 'FX00000000001', 'false', '{
			"name" : "客厅",
			"power" : "1",
			"line1": "1",
			"line2": "0",
			"line1Display": "灯",
			"line2Display": "插座",
			"manufacture" : "feixun",
			"softwareVersion": "V1.0.0",
			"oui" : "001122",
			"serialNumber" : "1314151456"       
   }', '2003-04-12 04:05:06 America/New_York','2003-04-12 04:05:06 America/New_York', '201607201508000001');

   INSERT INTO iot_device("deviceId","deviceDataModelId","manufacture","manufactureSN",online,"devData","firstOnlineTime","lastOnlineTime","userId") 
   VALUES ('201607201508000003', '2', 'feixun', 'FX00000000002', 'false', '{
			"name" : "客厅",
			"power" : "1",
			"line1": "1",
			"line2": "0",
			"line1Display": "灯",
			"line2Display": "插座",
			"manufacture" : "feixun",
			"softwareVersion": "V1.0.0",
			"oui" : "001122",
			"serialNumber" : "1314151456"       
   }', '2003-04-12 04:05:06 America/New_York','2003-04-12 04:05:06 America/New_York', '201607201508000001');


   INSERT INTO dev_user_mapping("deviceId","userId") VALUES ('201607201508000001', '201607201508000001');
   INSERT INTO dev_user_mapping("deviceId","userId") VALUES ('201607201508000002', '201607201508000001');
   INSERT INTO dev_user_mapping("deviceId","userId") VALUES ('201607201508000003', '201607201508000002');

   INSERT INTO plugin_table("pluginDir","newestVersion") VALUES ('http://172.17.60.163/plugin', 'V1.0.2');
   INSERT INTO plugin_table("pluginDir","newestVersion") VALUES ('http://172.17.60.163/plugin', 'V1.0.1');

   INSERT INTO plugin_version("pluginId","version","fileName") VALUES ('1', 'V1.0.2', 'wifidog.ipk');
   INSERT INTO plugin_version("pluginId","version","fileName") VALUES ('2', 'V1.0.1', 'libpcre.ipk');


   INSERT INTO vendor("username","password") VALUES ('admin','ISMvKXpXpadDiUoOSoAfww=='); //admin/admin

3. select examples
   -----------------------------------------------------------
   For:         app/dev_get api
   Detail:      根据userId查询该用户的所有设备
                和设备对应的dataModel数据
   -----------------------------------------------------------
   SELECT 
   iot_device."deviceId",iot_device.online,iot_device."devData",iot_dev_datamodel."dataModelId",iot_dev_datamodel.definition 
   FROM iot_device INNER JOIN iot_dev_datamodel ON 
   iot_device."deviceDataModelId"=iot_dev_datamodel."dataModelId" 
   WHERE iot_device."deviceId" IN (SELECT "deviceId" FROM dev_user_mapping WHERE "userId"='201607201508000001');

   
   -----------------------------------------------------------
   For:         app/dev_get_one api
   Detail:      根据userId和devId获取某一台设备的数据
   -----------------------------------------------------------
   SELECT 
   iot_device."deviceId",iot_device.online,iot_device."devData",iot_dev_datamodel."dataModelId",iot_dev_datamodel.definition AS "dataModel" 
   FROM iot_device INNER JOIN iot_dev_datamodel ON 
   iot_device."deviceDataModelId"=iot_dev_datamodel."dataModelId" 
   WHERE iot_device."deviceId" IN (SELECT "deviceId" FROM dev_user_mapping
   WHERE "userId"='201607201508000001' AND "deviceId"='201607201508000001');


   -----------------------------------------------------------
   For:         app/dev_set_dev api
   Detail:      根据userId和deviceId查询绑定关系，dataModel定义，
                设备在线状态,设备gatewayId
   -----------------------------------------------------------
   SELECT 
   iot_dev_datamodel.definition,dev_user_mapping."deviceId",iot_device.online,iot_device."devData",iot_device."gatewayId" 
   FROM (dev_user_mapping JOIN iot_device ON 
   dev_user_mapping."deviceId"=iot_device."deviceId") 
   LEFT JOIN iot_dev_datamodel ON iot_device."deviceDataModelId"=iot_dev_datamodel."dataModelId" 
   WHERE dev_user_mapping."deviceId"='201607201508000001' AND dev_user_mapping."userId"='201607201508000001';


   -----------------------------------------------------------
   For:         app/dev_bind api
   Detail:      根据manufacture和manufactureSN查询
                设备是否已经上过线
   -----------------------------------------------------------
   SELECT 
   iot_device."deviceId",iot_device.manufacture,iot_device."manufactureSN" 
   FROM iot_device 
   WHERE manufacture='feixun' AND "manufactureSN"='FXLED2016072700000001';

   -----------------------------------------------------------
   For:         app/dev_bind api
   Detail:      插入一条设备用户绑定记录,如果以存在则不擦入
   -----------------------------------------------------------
   INSERT INTO dev_user_mapping("deviceId","userId") 
   SELECT '201607201508000002','3' 
   WHERE NOT EXISTS(SELECT "deviceId","userId" 
   FROM dev_user_mapping 
   WHERE "deviceId"= '201607201508000002' AND "userId"='3');
