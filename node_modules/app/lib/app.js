var socket_arr = require('../../socket_arr');
var gateway_priv = require('../../gateway_priv');

var pg = require('pg');
var db = require('db');
var pgString = db.consqlString;

var client = new pg.Client(pgString);
client.connect();

function message_handle(req, res)
{      
    var message = req.body;
    var msgType = message.msgType;
    
    console.log(message);  
    console.log(msgType);

    if ("dev_get" == msgType)
    {
        var userId = message.userId;
        var deviceType = message.devType;

        var selectStr =  "SELECT "
            + "iot_device.\"deviceId\",iot_device.online,iot_device.\"devData\","
            + "iot_dev_datamodel.\"dataModelId\",iot_dev_datamodel.definition"
            + " FROM iot_device INNER JOIN iot_dev_datamodel"
            + " ON iot_device.\"deviceDataModelId\"=iot_dev_datamodel.\"dataModelId\""
            + " WHERE iot_device.\"deviceId\" IN "
            + "(SELECT \"deviceId\" FROM dev_user_mapping WHERE \"userId\"='"
            + userId + "');";

        console.log(selectStr);

        client.query(selectStr, function(err, result) {
            var deviceData = {
                deviceType : deviceType,
                deviceCount: result.rowCount,
                deviceDataModel : [],
                deviceList : []
            };

            if (err) throw err;

            for(var i=0; i<result.rowCount; i++) {
                var dataModelItem = result.rows[i].definition;
                var deviceItem = {
                    deviceId: result.rows[i].deviceId,
                    deviceDataModelId: result.rows[i].dataModelId,
                    online: "1",
                    devData: result.rows[i].devData,
                    userDevData : {
                        "nickname" : "led2",
                        "group" : "地点",
                    }
                };
                dataModelItem["deviceDataModelId"] = result.rows[i].dataModelId;
                deviceData.deviceDataModel.push(dataModelItem);
                deviceData.deviceList.push(deviceItem);
            }
            console.log(JSON.stringify(deviceData));
            res.send(JSON.stringify(deviceData));
        });
    }
    else if ("dev_set_dev" == msgType) {
        var ret = {
            "ret":"0",
        };
        res.send(JSON.stringify(ret));
    }
    else if ("dev_ctl" == msgType) {
        var ret = {
            "ret":"0",
        };
        res.send(JSON.stringify(ret));
    }
    else if ("dev_bind" == msgType) {
        var ret = {
            "ret":"0",
        };
        res.send(JSON.stringify(ret));
    }

}

module.exports.message_handle = message_handle;
