var socket_arr = require('../../socket_arr');
var gateway_priv = require('../../gateway_priv');

var pg = require('pg');
var db = require('db');
var pgString = db.consqlString;

var client = new pg.Client(pgString);
client.connect();

function send_result(res, retCode, errStr) {
    var ret = {
        ret: retCode,
        errStr: errStr
    };
    console.log(JSON.stringify(ret));
    res.send(JSON.stringify(ret));
}

function message_handle(req, res)
{      
    var message = req.body;
    var msgType = message.msgType;
    
    console.log(message);  
    console.log(msgType);

    if ("dev_get" == msgType) {
        var userId = message.userId;
        var deviceType = message.devType;

        if (typeof(userId) == "undefined" || typeof(deviceType) == "undefined") {
            send_result(res, 80001, "参数错误！");
            return;
        }

        var selectStr =  "SELECT "
            + "iot_device.\"deviceId\",iot_device.online,iot_device.\"devData\","
            + "iot_dev_datamodel.\"dataModelId\",iot_dev_datamodel.\"devDataModel\" "
            + "FROM iot_device INNER JOIN iot_dev_datamodel "
            + "ON iot_device.\"deviceDataModelId\"=iot_dev_datamodel.\"dataModelId\" "
            + "WHERE iot_device.\"deviceId\" IN "
            + "(SELECT \"deviceId\" FROM dev_user_mapping WHERE \"userId\"='"
            + userId + "');";

        console.log(selectStr);

        client.query(selectStr, function(err, result) {
            if (err) {
                console.error(err.stack);
                send_result(res, 90001, "数据库查询错误！");
                return;
            }

            var deviceData = {
                deviceType : deviceType,
                deviceCount: result.rowCount,
                deviceDataModel : [],
                deviceList : []
            };

            for(var i=0; i<result.rowCount; i++) {
                var dataModelItem = result.rows[i].devDataModel;
                var deviceItem = {
                    deviceId: result.rows[i].deviceId,
                    deviceDataModelId: result.rows[i].dataModelId,
                    online: "1",
                    devData: result.rows[i].devData,
                    userDevData : {
                        "nickname" : "led2",
                        "group" : "地点",
                    }
                };
                dataModelItem["deviceDataModelId"] = result.rows[i].dataModelId;
                deviceData.deviceDataModel.push(dataModelItem);
                deviceData.deviceList.push(deviceItem);
            }
            console.log(JSON.stringify(deviceData));
            res.send(JSON.stringify(deviceData));
        });
    }
    else if ("dev_get_one" == msgType) {
        var userId = message.userId;
        var deviceId = message.devId;

        if (typeof(userId) == "undefined" || typeof(deviceId) == "undefined") {
            send_result(res, 80001, "参数错误！");
            return;
        }

        var selectStr =  "SELECT "
            + "iot_device.\"deviceId\",iot_device.online,iot_device.\"devData\","
            + "iot_dev_datamodel.\"dataModelId\",iot_dev_datamodel.\"devDataModel\" AS \"dataModel\" "
            + "FROM iot_device INNER JOIN iot_dev_datamodel "
            + "ON iot_device.\"deviceDataModelId\"=iot_dev_datamodel.\"dataModelId\" "
            + "WHERE iot_device.\"deviceId\" IN "
            + "(SELECT \"deviceId\" FROM dev_user_mapping WHERE \"userId\"='"
            + userId + "' AND \"deviceId\"='" + deviceId + "');";

        console.log(selectStr);

        client.query(selectStr, function(err, result) {
            if (err) {
                console.error(err.stack);
                send_result(res, 90001, "数据库查询错误！");
                return;
            }

            if(result.rowCount != 1) {
                send_result(res, 90002, "后台数据库错误！");
                return;
            }

            console.log(JSON.stringify(result.rows[0]));
            res.send(JSON.stringify(result.rows[0]));
        });
    }
    else if ( ("dev_set_dev" == msgType) || ("dev_ctl" == msgType) ) {
        var userId = message.userId;
        var devId = message.devId;

        if (typeof(userId) == "undefined" || typeof(devId) == "undefined") {
            send_result(res, 80001, "参数错误！");
            return;
        }

        var selectStr =  "SELECT "
            + "iot_dev_datamodel.\"devDataModel\",dev_user_mapping.\"deviceId\",iot_device.online,iot_device.\"devData\",iot_device.\"gatewayId\" "
            + "FROM (dev_user_mapping JOIN iot_device ON "
            + "dev_user_mapping.\"deviceId\"=iot_device.\"deviceId\") "
            + "LEFT JOIN iot_dev_datamodel ON "
            + "iot_device.\"deviceDataModelId\"=iot_dev_datamodel.\"dataModelId\" "
            + "WHERE "
            + "dev_user_mapping.\"deviceId\"='" + devId + "' AND "
            + "dev_user_mapping.\"userId\"='" + userId + "';";

        console.log(selectStr);

        client.query(selectStr, function(err, result) {
            if (err) {
                console.error(err.stack);
                send_result(res, 90001, "数据库查询错误！");
                return;
            }

            if(result.rowCount < 1) {
                send_result(res, 90009, "设备不存在！");
                return;
            }

            if(result.rowCount > 1) {
                send_result(res, 90002, "后台数据库错误！");
                return;
            }

            if(result.rows[0].online == false) {
                send_result(res, 90003, "设备离线！");
                return;
            }

            /* TODO: datamodel check */
            
            var socket = socket_arr.socket_arr_get(gateway_priv.gateway_socket_arr, result.rows[0].gatewayId);
            if (-1 == socket) {
                send_result(res, 90004, "后台与设备链接错误！");
                return;
            }

            var cmdStr= {
                type: "set",
                commandId: 1234567890, /* TODO: need change to commandId */
                userId: userId,
                deviceId: devId,
                config: {
                    devData: {}
                }
            };
            if ("dev_set_dev" == msgType) {
                cmdStr.config.devData = message.settings;
            } else {
                cmdStr.config.devData = message.controls;
            }
            console.log(JSON.stringify(cmdStr));
            socket.write(JSON.stringify(cmdStr));

            send_result(res, 0, "Success!");
        });
    }
    else if ("dev_bind" == msgType) {
        var userId = message.userId;
        var manufacture = message.manufacture;
        var manufactureSN = message.serialNumber;
        var selectStr =  "SELECT iot_device.\"deviceId\" FROM iot_device "
            + "WHERE manufacture='" + manufacture + "' AND \"manufactureSN\"='" + manufactureSN + "';";

        client.query(selectStr, function(err, result) {
            if (err) {
                console.error(err.stack);
                send_result(res, 90001, "数据库查询错误！");
                return;
            }

            if(result.rowCount < 1) {
                /* Device has not connect to server */
                var insertStr = "INSERT INTO iot_device(manufacture,\"manufactureSN\") VALUES('"
                                + manufacture + "','" + manufactureSN + "') RETURNING \"deviceId\";";
                client.query(insertStr, function(err, result) {
                    if (err) {
                        console.error(err.stack);
                        send_result(res, 90006, "设备表插入错误！");
                        return;
                    }

                    if(result.rowCount != 1) {
                        send_result(res, 90006, "设备表插入错误！");
                        return;
                    }
                    
                    var insertStr = "INSERT INTO dev_user_mapping(\"deviceId\",\"userId\") VALUES('"
                                     + result.rows[0].deviceId + "','" + userId + "');";

                    client.query(insertStr, function(err, result) {
                        if (err) {
                            console.error(err.stack);
                            send_result(res, 90006, "设备用户绑定表插入错误！");
                            return;
                        }

                        if(result.rowCount == 1) {
                            send_result(res, 0, "Success!");
                        } else {
                            send_result(res, 90006, "设备用户绑定表插入错误！");
                        }
                    });
                });
            } else {
                var selectStr = "SELECT * FROM dev_user_mapping WHERE \"deviceId\"='"
                                + result.rows[0].deviceId + "' AND \"deviceId\"='" + userId + "';"
                client.query(selectStr, function(err, result) {
                    if (err) {
                        console.error(err.stack);
                        send_result(res, 90001, "数据库查询错误！");
                        return;
                    }

                    if(result.rowCount > 0) {
                        send_result(res, 0, "Success!");
                        return;
                    }

                    var insertStr = "INSERT INTO dev_user_mapping(\"deviceId\",\"userId\") VALUES('"
                                    + result.rows[0].deviceId + "','" + userId + "');";
                
                    client.query(insertStr, function(err, result) {
                        if (err) {
                            console.error(err.stack);
                            send_result(res, 90006, "设备用户绑定表插入错误！");
                            return;
                        }

                        if(result.rowCount == 1) {
                            send_result(res, 0, "Success!");
                        } else {
                            send_result(res, 90006, "设备用户绑定表插入错误！");
                        }
                    });
                });
            }
        });
    }
}

module.exports.message_handle = message_handle;
