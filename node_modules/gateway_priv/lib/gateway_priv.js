var socket_arr  = require('../../socket_arr');
var wechat_priv = require('../../wechat_priv');
var pg = require('pg');
var db = require('db');
var pgString = db.consqlString;
var client = new pg.Client(pgString);

client.connect();

var gatewayTableName = " iot_gateway ";
var gatewayIdName = "gatewayId"

var gateway_socket_arr = new Array();

function sleep(numberMillis) 
{
    var now = new Date();
    var exitTime = now.getTime() + numberMillis;
    while (true) 
	{
	    now = new Date();
	   if (now.getTime() > exitTime)
		return;
	}
}

function strToJson(str)
{
    var json = eval('(' + str + ')');
    return json;
} 


function select_row_handler(result)
{
   this.rows_arr.push(result);
}

function insert_end_handler(result)
{
    console.log("Enter insert_end_handler");
    console.log(this.rows_arr);   

    this.setObj.res.writeHead(200, {'Content-Type': 'application/json'});

    /* TODO: need to change format from string to JSON */
    var end_str = "{\"type\":\"rsp_device_online\", \"commandId\": 0, \"manufactureSN\": \"" + this.setObj.manufactureSN
                       +"\", \"deviceId\":\"" + this.rows_arr[0].deviceId + "\"}";

    console.log(end_str);

    this.setObj.res.end(end_str);

}

function insert_device_handler(result)
{
    console.log("Enter insert_device_handler");

    if ( 0 == result.rowCount)
    {
        /*TBD no dataModelId*/
    }
    else
    {
        /* insert to iot_device */

        /* TODO: check insert devData with dataModel */
        var query_str = "INSERT INTO iot_device (\"deviceDataModelId\", \"gatewayId\", online, \"devData\", manufacture, \"manufactureSN\") VALUES('"
                     + this.rows_arr[0].dataModelId + "','"
                     + this.setObj.gatewayId + "','"
                     + true + "','"
                     + JSON.stringify(this.setObj.devData) + "','"
                     + this.setObj.manufacture + "','"
                     + this.setObj.manufactureSN + "') RETURNING \"deviceId\";";

        console.log(query_str);
        var query = client.query(query_str);
        query.setObj = this.setObj;
        query.rows_arr = new Array();
        query.on('row', select_row_handler);
        query.on('end', insert_end_handler);
    }
}

function device_online_handler(result)
{
    console.log("Enter device_online_handler");
    console.log(result.rowCount);

    if ( 0 == result.rowCount)
    {
        /* 
         * No this device before, insert it into iot_device table.
         * But we need to get deviceDataModeId first.
         */

        var query_str = "SELECT * FROM iot_dev_datamodel" 
                       + " WHERE manufacture = '" + this.setObj.manufacture + "' AND "
                       + " \"manufactureDataModelId\" = '" + this.setObj.manufactureDataModelId + "';";

        console.log(query_str);

        var query = client.query(query_str);
        query.setObj = this.setObj;
        query.rows_arr = new Array();

        
        query.on('row', select_row_handler);        
        query.on('end', insert_device_handler);
    }

    else
    {
        /* already in iot_device table, update it */
        
        var update_string = "UPDATE iot_device"
                           + " SET online = 'true', \"gatewayId\" = '" + this.setObj.gatewayId 
                           +   "' , \"devData\" = '"    + JSON.stringify(this.setObj.devData)
                           + "' WHERE manufacture ='" + this.setObj.manufacture
                           + "' AND \"manufactureSN\" = '" + this.setObj.manufactureSN + "';";

        console.log(update_string);

	this.setObj.res.writeHead(200, {'Content-Type': 'application/json'});

	var end_str = "{\"type\":\"rsp_device_online\", \"commandId\": 0, \"manufactureSN\": \"" + this.setObj.manufactureSN
            +"\", \"deviceId\":\"" + this.rows_arr[0].deviceId +"\"}";
	console.log(end_str);

	this.setObj.res.end(end_str);

        var update_query = client.query(update_string);
    }
}

function gateway_select_handler(result)
{
    console.log("Enter gateway_select_handler");

    if (0 == result.rowCount)
    {
        var query_str = "INSERT INTO " + gatewayTableName + "(\"" + gatewayIdName + "\", online) VALUES ('"
                       + this.gatewayId + "', 'true');";

        console.log(query_str);
        client.query(query_str);
    }

    else
    {

        var update_string = "UPDATE " + gatewayTableName + "SET online = 'true' WHERE  \""  
                        + gatewayIdName + "\" = '" + this.gatewayId + "';";

        console.log(update_string);

        var update_query = client.query(update_string);
    }
}

function message_handle(req, res)
{ 
    var msg = req.body;     

//    console.log(msg);
    req.socket.setKeepAlive(true);
    req.socket.setTimeout(0);
//    console.log(req.body.type);

    if ("gateway_online" == req.body.type)
    {

        res.writeHead(200, {'Content-Type': 'application/json'});
        var end_str = "{\"type\":\"rsp_gateway_online\", \"commandId\": 0, \"status\":" + 0 + "}";
        res.end(end_str);

        req.socket.id  = req.body.sn;
        socket_arr.socket_arr_add(gateway_socket_arr, req.socket, req.socket.id);

        var query_str = "SELECT * FROM iot_gateway WHERE \"gatewayId\" = '" + req.body.sn + "'";

        var query = client.query(query_str);

        query.gatewayId = req.body.sn;
        
	query.on('end', gateway_select_handler);

        req.socket.on('close', gateway_close_socket);
    }

    else if ("device_online" == req.body.type)
    {
	/* add by gaojing start */
        /* TODO: check sleep 1000? */
	sleep(1000);
	console.log("Enter device_online func");

        var gatewayId = req.body.gatewayId;

        var devDataString = req.body.config.devData;

	var devData = JSON.parse(devDataString);

	var manufacture = devData.manufacture;

        var manufactureDataModelId = devData.manufactureDataModelId;

	var manufactureSN = devData.manufactureSN; 

        var select_str = "SELECT * FROM iot_device WHERE manufacture = '" + manufacture + "' AND " + "\"manufactureSN\" = '" + manufactureSN + "';";

        console.log(select_str);

        var query = client.query(select_str);

        query.setObj = new Object();
        query.setObj.gatewayId = gatewayId;
        query.setObj.manufacture = manufacture;
        query.setObj.manufactureDataModelId = manufactureDataModelId;      
        query.setObj.manufactureSN = manufactureSN;
        query.setObj.devData = devData;
        query.setObj.res = res;

        query.rows_arr = new Array();     

        query.on('row', select_row_handler);
        query.on('end', device_online_handler);
 
    }

    else if ( "resp_get" == req.body.type)
    {
        if ( 2 == req.body.status)
        {
            var user_id = req.body.user_id;
            var content = req.body.keyname;

            console.log(user_id);
            console.log(content);
        
            var socket = socket_arr.socket_arr_get(weixin_priv.weixin_socket.arr);
            if ( -1 != socket)
            {
                res.reply({
                    type: 'text',
                    content: content
                });

            }
        }
    }

    
    else if ( "rsp_set" == req.body.type)
    {
        console.log("Enter rsp_set");
        console.log(req.body.status);

        if ( 1 == req.body.status)
        {
            var user_id = req.body.user_id;
            var socket = socket_arr.socket_arr_get(wechat_priv.weixin_socket_arr, user_id);

            console.log("3344");
            console.log(socket.id);
            console.log("5566");

            if ( -1 == socket)
            {
                console.log("resp_set 1, socket -1.");
            }
            else
            {
                socket.res.reply({
                    type: 'text',
                    content: "命令已下达至网关, 请在30秒后执行设备查询操作以查询操作结果。"
                });

            }
        }

        if ( 2 == req.body.status)
        {
            var user_id = req.body.user_id;
            var content = req.body.keyname;

            console.log(user_id);
            console.log(content);
            console.log(content[0].power_switch);
        
  //          var socket = socket_arr.socket_arr_get(weixin_priv.weixin_socket.arr);
            var update_string = "UPDATE device_" + req.body.device_type
                               + " SET switch = '" + content[0].power_switch + "' WHERE device_id = '" 
                              + req.body.device_id + "';";

            client.query(update_string);
            console.log(update_string);
        }
    }
}

function gateway_close_socket(socket)
{
          
    var update_string = "UPDATE iot_gateway SET online = 'false' WHERE \"gatewayId\" = '" + this.id + "';";

    console.log(update_string);

    var update_query = client.query(update_string);


    var update_string = "UPDATE iot_device SET online = 'false' WHERE \"gatewayId\" = '" + this.id + "';";

    console.log(update_string);

    var update_query = client.query(update_string);
   
    socket_arr.socket_arr_del(gateway_socket_arr, this.id);
}

module.exports.message_handle = message_handle;
module.exports.gateway_socket_arr = gateway_socket_arr;
module.exports.gateway_value = 1;
