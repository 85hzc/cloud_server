var socket_arr  = require('../../socket_arr');
var wechat_priv = require('../../wechat_priv');
var pg = require('pg');
var db = require('db');
var pgString = db.consqlString;
var client = new pg.Client(pgString);

client.connect();

var gateway_socket_arr = new Array();

function db_res_device_online_select_query(select_result)
{
    console.log("Enter db_res_bind_select_query");

    if ( 0 == select_result.rowCount)
    {
        var insert_string = "INSERT INTO user_table VALUES ('"
                    + this.userID + "','"
                    + this.deviceID + "','"
                    + 1 + "')";

        console.log(insert_string);

        var insert_query = client.query(insert_string);
    }
    else
    {
        console.log(" 0 != row");
    }
}

function message_handle(req, res)
{ 
    var msg = req.body;     

    console.log(msg);
    req.socket.setKeepAlive(true);
    req.socket.setTimeout(0);
//    console.log(req.body.type);

    if ("gateway_online" == req.body.type)
    {

        res.writeHead(200, {'Content-Type': 'application/json'});
        var end_str = "{\"type\":\"resp_register\", \"serial\": 0, \"status\":" + 0 + "}";
        res.end(end_str);

        req.socket.id  = req.body.sn;
        socket_arr.socket_arr_add(gateway_socket_arr, req.socket, req.socket.id);
        
        var update_string = "UPDATE gateway_table SET online = 'true' WHERE gateway_id = '" + req.body.sn + "';";

        console.log(update_string);

        var update_query = client.query(update_string);

        req.socket.on('close', gateway_close_socket);
    }

    else if ("device_online" == req.body.type)
    {
        var gateway_id = req.body.gateway_id;
        var device_id  = req.body.device_id;

            
        var update_string = "UPDATE device_" + req.body.device_type
                           + " SET online = 'true', gateway_id = '" + gateway_id 
                           +   "' , switch = '"    + req.body.config[7].PowerSwitch           
                           + "' WHERE device_id = '" + device_id + "';";
/*
        var update_string = "UPDATE device_table SET online = 'true', gateway_id = '" + gateway_id 
                          + "' , run_status = '"    + req.body.config[7].PowerSwitch  
                          + "' WHERE device_id = '" + device_id + "';";
*/
        console.log(update_string);

        var update_query = client.query(update_string);
    }

    else if ( "resp_get" == req.body.type)
    {
        if ( 2 == req.body.status)
        {
            var user_id = req.body.user_id;
            var content = req.body.keyname;

            console.log(user_id);
            console.log(content);
        
            var socket = socket_arr.socket_arr_get(weixin_priv.weixin_socket.arr);
            if ( -1 != socket)
            {
                res.reply({
                    type: 'text',
                    content: content
                });

            }
        }
    }

    
    else if ( "rsp_set" == req.body.type)
    {
        console.log("Enter rsp_set");
        console.log(req.body.status);

        if ( 1 == req.body.status)
        {
            var user_id = req.body.user_id;
            var socket = socket_arr.socket_arr_get(wechat_priv.weixin_socket_arr, user_id);

            console.log("3344");
            console.log(socket.id);
            console.log("5566");

            if ( -1 == socket)
            {
                console.log("resp_set 1, socket -1.");
            }
            else
            {
                socket.res.reply({
                    type: 'text',
                    content: "命令已下达至网关, 请在30秒后执行设备查询操作以查询操作结果。"
                });

            }
        }

        if ( 2 == req.body.status)
        {
            var user_id = req.body.user_id;
            var content = req.body.keyname;

            console.log(user_id);
            console.log(content);
            console.log(content[0].power_switch);
        
  //          var socket = socket_arr.socket_arr_get(weixin_priv.weixin_socket.arr);
            var update_string = "UPDATE device_" + req.body.device_type
                               + " SET switch = '" + content[0].power_switch + "' WHERE device_id = '" 
                              + req.body.device_id + "';";

            client.query(update_string);
            console.log(update_string);
        }
    }
}

function gateway_close_socket(socket)
{          
    var update_string = "UPDATE gateway_table SET online = 'false' WHERE gateway_id = '" + this.id + "';";

    console.log(update_string);

    var update_query = client.query(update_string);

    var update_string = "UPDATE device_led SET online = 'false' WHERE gateway_id = '" + this.id + "';";

    console.log(update_string);

    var update_query = client.query(update_string);
   
    socket_arr.socket_arr_del(gateway_socket_arr, this.id);
}

module.exports.message_handle = message_handle;
module.exports.gateway_socket_arr = gateway_socket_arr;
module.exports.gateway_value = 1;
