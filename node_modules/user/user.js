
var crypto = require('crypto');


/*var mysql   = require('mysql');
var db = require('db');
var client = mysql.createConnection(db.mysql);
 
client.connect();
*/



var mysql   = require('mysql');
var db = require('db');

var client;
function handleDisconnect() {
client = mysql.createConnection(db.mysql); // Recreate the connection, since
// the old one cannot be reused.
client.connect(function(err) {              // The server is either down
if(err) {                                     // or restarting (takes a while sometimes).
console.log('error when connecting to db:', err);
setTimeout(handleDisconnect, 1000); // We introduce a delay before attempting to reconnect,
}                                     // to avoid a hot loop, and to allow our node script to
});                                     // process asynchronous requests in the meantime.
// If you're also serving http, display a 503 error.
client.on('error', function(err) {
console.log('db error', err);
if(err.code === 'PROTOCOL_CONNECTION_LOST') { // Connection to the MySQL server is usually
handleDisconnect();                         // lost due to either server restart, or a
} else {                                      // connnection idle timeout (the wait_timeout
throw err;                                  // server variable configures this)
}
});
}
handleDisconnect();









function send_result(res, retCode, errStr, id) {
    var ret = {
        ret: retCode,
        errStr: errStr,
        userId: id
    };
    console.log(JSON.stringify(ret));
    res.send(JSON.stringify(ret));
}

function register(req, res)
{
    var message = req.body;
    var username = message.username;
    
    var md5 = crypto.createHash('md5');
    var password = md5.update(message.password).digest('base64');

    console.log("register username: " + username + ", password: " + message.password);

    var selectStr = "SELECT * FROM user_table WHERE username='"+username+"';";

    client.query(selectStr, function(err, results) {
        if (err) {
                console.error(err.stack);
                send_result(res, 90001, "数据库查询错误！");
                return;
            }
        if (results.length > 0) {
            send_result(res, 91001, "用户已存在!");
            return;
        }
        else {
            var insertStr = "INSERT INTO user_table(username,password) "
                   + "VALUES('"+username+ "','"+password+"');";
            console.log(insertStr);
            client.query(insertStr, function(err, result) {
                if (err) {
                    console.error(err.stack);
                    send_result(res, 91002, "用户表插入错误!");
                    return;
                }
                else {
                    //if (result.length == 1) {
                        send_result(res, 0, "Success!");
                   // }
                  //  else {
                  //      send_result(res, 91002, "用户表插入错误!");
                   // }
                }
            });
        }
    });
}

function login(req, res)
{
    var message = req.body;
    var username = message.username;

    /*var md5 = crypto.createHash('md5');
    var password = md5.update(message.password).digest('base64');

    console.log("login username: " + username + ", password: " + message.password);
    */
    var selectStr = 'SELECT * FROM user_table WHERE phoneNo="'+username+'" ';
    console.log(selectStr);

    client.query(selectStr, function(err, result) {

        if (err) {
            console.error(err.stack);
            send_result(res, 90001, "数据库查询错误！");
            return;
        }

        if (result.length < 1) {

            var insertStr="INSERT INTO user_table (phoneNo) VALUES('"+username+"')";
            console.log(insertStr);

            client.query(insertStr,function(err,results){

                var selectStr3="SELECT @@IDENTITY AS ID";

                    client.query(selectStr3,function(err,result3){


                        send_result(res, 0, "Success!",result3[0].ID);


                         });

            });

    
        }
        else if (result.length == 1) {
            send_result(res, 0, "Success!",result[0].userId);
        }
        else {
            send_result(res, 91004, "用户表查询错误!");
        }
    });
}


module.exports.register = register;
module.exports.login = login;
