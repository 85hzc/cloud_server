
var pg = require('pg');
var socket_arr   = require('../../socket_arr');
var gateway_priv = require('../../gateway_priv');

var pgString = "postgres://wudi:123@localhost/cloud_server_db";
var client = new pg.Client(pgString);

client.connect();


function device_row_result(result)
{
    console.log(result.rowCount);
    this.device_rows.push(result);
}

function device_end_result(result)
{
    console.log(result.rowCount);
    console.log(this.device_rows);

    var content_str = "您绑定设备的设备个数为" + result.rowCount + "\n\n";
    var i = 0;

    if ( false == this.device_rows[0].online)
    {

        content_str = content_str + "设备id为" + this.device_rows[0].device_id + "的运行状态为不在线.\n\n";
        
        this.res.reply({
                  type: 'text',
                  content: content_str
        });
    }
    else
    {
        console.log("111");


        console.log("222");

        var socket = socket_arr.socket_arr_get(gateway_priv.gateway_socket_arr, this.device_rows[0].gateway_id);

        if ( -1 == socket)
        {
            content_str = content_str + "设备id为" + this.device_rows[0].device_id + "的运行状态为不在线.\n\n";
            
            this.res.reply({
                type: 'text',
                content: content_str
            });
        }

        else
        {
           console.log(this.cmd);
           if ("turn_on" == this.cmd)
           {
               var power_switch = "on";
           }
           else if ("turn_off" == this.cmd)
           {
               var power_switch = "off";
           }
           else
           {
               console.log("error user cmd.");
           }

            var cmd_str =  "{\"type\":\"set\", \"serial\":100, \"user_id\":\"" + this.user_id + "\","
                         + "\"device_id\":\"" + this.device_rows[0].device_id + "\",\"device_type\":"
                         + "\"led\",\"config\": {\"power_switch\":\"" + power_switch + "\","  
                         + "\"status\": \"OK\", \"color_rgb\":\"30\"}}";

            console.log(cmd_str);
/*
            var cmd_str =  "{\"type\":\"set\", \"serial\":100, \"user_id\":\"testaccount\", \
                            \"device_id\":\"gh_99f35e5ef2ff_6355e9bd56857928\",\"device_type\": 
                            \"led\",\"config\": {\"power_switch\": \"on\", \"status\": \"OK\", \"color_rgb\": \"30\"}}";
*/
            console.log(cmd_str);
            socket.write(cmd_str);
        }
                
//        content_str = content_str + "设备id为" + this.device_rows[0].device_id + "的运行状态为" + this.device_rows[0].run_status + "\n\n";
    }

}

function user_row_result(result)
{
//    console.log(result);                                                                                                                            
    this.user_rows.push(result);
}

function user_end_result(result)
{
    console.log("user_end_result rowCount = " + result.rowCount);

    if ( 0 == result.rowCount)
    {

        this.res.reply({
                  type: 'text',
                  content: '您没有绑定设备。'
        });

    }

    else
    {
	var content_str = "您绑定设备的设备个数为" + result.rowCount + "\n";

	var i = 0;

	var select_str = "SELECT * FROM device_table WHERE (device_id = '" + this.user_rows[0].device_id + "'";

        for ( i = 1; i < this.user_rows.length; i++)
	    {
            select_str = select_str + " OR device_id = '" + this.user_rows[i].device_id + "'";
        }

        select_str = select_str + ");";

	var select_device_query = client.query(select_str);
        select_device_query.res = this.res;
        select_device_query.user_id = this.user_id;
        select_device_query.cmd     = this.cmd;
	select_device_query.device_rows = new Array();
        select_device_query.on('row', device_row_result);

	select_device_query.on('end', device_end_result);

	console.log(select_str);

        console.log(content_str);
//        console.log(result);                                                                                                                       
    }
}

module.exports.user_row_result = user_row_result;
module.exports.user_end_result = user_end_result;
