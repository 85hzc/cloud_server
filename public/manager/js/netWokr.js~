/*说明
 * 1.不需要显示的数据如pluginId由影藏的td的text保存
 * 
 */
/*1.接口url  thumbnail*/
var allPluginUrl = "/plugin/allPlugin"; //get
var queryPluginUrl = "/plugin/queryPluginVersion"; //post
var addPluginUrl = "/plugin/addPlugin"; //post
var deletePluginUrl = "/plugin/deletePlugin"; //post
var deletePluginVersionUrl = "/plugin/deleteVersion";
var publishVersionUrl = "/plugin/publishVersion";
var addPluginVersionUrl = "/plugin/fileupload";
var allDeviceUrl = "/dev/allDev";
var addDeviceUrl = "/dev/addDataModel";
var addDataModelUrl = "/dev/fileupload";
var addDevicePluginUrl = "/dev/addPlugin";
var deleteDeviceUrl = "/dev/deleteDataModel";
var queryFirmwareVersionUrl = "/firmware/queryFirmwareVersion";
var publishFirmwareVersionUrl = "/firmware/publishVersion";
var deleteFirmwareVersionUrl = "/firmware/deleteVersion";
var addFirmwareVersionUrl = "/firmware/fileupload";
/*1.接口url*/
/*2.判断哪个*/
(function getdata() {
	var fileName = $("#fileName").attr("fileNam");
	switch(fileName) {
		case "plugin":
			plugin()
			break;
		case "pluginVersion":
			pluginVersion()
			break;
		case "addPlugin":
			addPlugin()
			break;
		case "addPluginVersion":
			addPluginVersion();
			break;
		case "device":
			device();
			break;
		case "addDevice":
			addDevice();
			break;
		case "deviceDetail":
			deviceDetail();
			break;
			
		case "addFirmwareVersion":
			addFirmwareVersion();
			break;
		default:
			break;
	}
})();
/*2.判断哪个*/
/*---------------------------------3.添加cell方法----------------------------*/
function addCell(table, cell, arr) {
	for(var i = 0; i < arr.length; i++) {
		var dic = arr[i];
		var cell1 = $(cell).clone();
		var table = $(table);
		for(var key in dic) {
			if($(cell1).children().length != 0) { //判断cell本身是不是只有一个元素
				$(cell1).find("[name=" + key + "]").text(dic[key]);
			} else {  
                                     if(key=="pluginName"){  
					$(cell1).text(dic[key]).val(dic["pluginId"]?dic["pluginId"]:null);}//if2
			}
		}
		$(cell1).show();
		$(table).append(cell1);
	} //for 

} //addCell2  cell有问题
function addCell2(table, cell, arr, publishVersion) {
	for(var i = 0; i < arr.length; i++) {
		var dic = arr[i];
		var cell1 = $(cell).clone();
		var table = $(table);
		for(var key in dic) {
			$(cell1).find("[name=" + key + "]").text(dic[key]);
			if(dic["version"] == publishVersion) {
				$(cell1).find(".pluginVersion").text("在线").css("background", "orange");
				$(cell1).find(".pluginDelete").hide();
			}
		}
		$(cell1).show();
		$(table).append(cell1);
	} //for 

} //addCell2
/*----------------------------遍历input-------------------------------*/
function getInputName(formId) {
	var json = {};
	var inputs = $(formId + " input");

	for(var i = 0; i < 　inputs.length; i++) {
		var inputa = $(inputs[i]);
		var name = $(inputs[i]).attr("name");
		if(name) {
			json[name] = $(inputs[i]).val();
		}
	} //for
	return json;
}
/*--------------------------获取父元素中所有属性名为x的值返回json----------------------------*/
function getDataFromEle(parentEle,clickEle,attrName){
	    var childEle = $(clickEle).parents(parentEle).children();
		var data = {};
		for(var i = 0 ; i < childEle.length; i++){
			var child = childEle[i];
			var key = $(child).attr(attrName);
			var val = $(child).text();
			if(!key){
				continue;
			}
			data[key] = val;
		}
	   return data;
}
/*-------------------------------打印遍历json-----------------------------------------*/
function logJson(myJson){
	for(var key in myJson){
		console.log(myJson[key]);
	}
}
/*-------------------------------打印遍历json-----------------------------------------*/	
/*一.设置插件数据*/
function plugin() {
	
	$.ajax({
		type:"get",
		url:allPluginUrl,
		async:true,
		success:setPluginData,
		error:function(){
			alert("加载失败尝试刷新页面");
		}
	});
function setPluginData(data){
        var dataObj = JSON.parse(data);
	var arr = dataObj.values;

	addCell("#table", "#cell", arr);
	/*---------------------------------查看版本信息-------------------------------------------*/
	$(".pluginVersion").on("click", function() {
		var pluginId = $(this).parent().siblings("[name='pluginId']").text();

		//使用父元素保存pluginId
		$("#fileName", parent.document).attr("pluginId", pluginId);
		$("#iframe1", parent.document).attr({
			"src": "pluginVersion.html"
		});
	}); //click
	/*---------------------------------添加插件------------------------------------------*/
	$(".addPluginBtn").on("click", function() {

	});
	/*----------------------------------删除插件-----------------------------------------*/
	$(".pluginDelete").on("click", function() {

		var sure = confirm("确定删除吗?");
		var pluginId = $(this).parent().siblings("[name='pluginId']").text();
		if(sure) {

			$.ajax({
				type: "post",
				url: deletePluginUrl,
				async: true,
				data: {
                                  "pluginId":pluginId
                                },
				success: function(data) {
					//alert("succes");
					window.location.reload();
				},
				error: function() {
					alert("删除失败");
				}
			});
		} //if
	}); //onclick

}//successCallback
	/*----------------------------------删除插件-----------------------------------------*/

} //plugin

/*一.设置插件数据*/
/*二：查询插件版*/
function pluginVersion() {
	var pluginId = $("#fileName", parent.document).attr("pluginId");
	var thisdata = {
		"pluginId": pluginId
	};

	$.ajax({
		type: "post",
		url: queryPluginUrl,
		async: true,
		data: thisdata,
		success:pluginVersionCallBack,
		error: function() {
			alert("查询失败");
		},
                    timeout:5000

	}); //ajax
/*
	var queryData = {
		"pluginId": '1',
		"ret": 0,
		"publishVersion": 'V1.0.2',
		"values": [{
			"version": 'V1.0.1',
			"changeLog": null,
			"createTime": null,
			"md5": "xxxxxxx"
		}, {
			"version": 'V1.0.2',
			"changeLog": null,
			"createTime": null,
			"md5": "xxxxxxx"
		}]
	};
*/
       function pluginVersionCallBack(data){

        var queryData = JSON.parse(data);
	var publishVersion = queryData.publishVersion;

	var queryArr = queryData.values;
       
	addCell2("#table", "#cell", queryArr, publishVersion);
	/*--------------------------------------删除插件版本----------------------------*/
	$(".pluginDelete").on("click", function() {
		var version = $(this).parent().siblings("[name='version']").text();
		var thisdata = {
			"pluginId": pluginId,
			"version": version
		};
		var sure = confirm("确定删除吗?");
		if(sure){
		$.ajax({
			type: "post",
			url: deletePluginVersionUrl,
			async: true,
			data: thisdata,
			success: function() {
				window.location.reload();
			},
			error: function() {
				alert("删除失败!");
			}

		});
		}//if
	});
	/*三：---------------------------------发布插件版本----------------------------------*/
	$(".pluginVersion").on("click", function() {
		if($(this).text() == "在线") {
			alert("此版本已发布");
			return;
		}
		var sure = confirm("确定发布?");
                        var version = $(this).parent().siblings("[name='version']").text();
			var thisdata = {
				"pluginId": pluginId,
				"version": version
			};

		if(sure) {
			
			$.ajax({
				type: "post",
				url: publishVersionUrl,
				async: true,
				data: thisdata,
				success: function() {
					window.location.reload();
				},
				error: function() {
					alert("发布失败请重试!");
				}
			});
		} //if
	});
}//pluginVersionCallBack
} /*二：查询插件版*/

/*三：---------------------------------添加插件----------------------------------*/
function addPlugin() {

	$(".inputSubmit").on("click", function() {

		var thisdata = getInputName("#addPluginForm");

		$.ajax({
			type: "post",
			url: addPluginUrl,
			async: true,
			data: thisdata,
			success: function(data) {
				if(data) {
					var sure = confirm("添加成功是否继续添加");
					if(!sure) {
						history.back();
					}
				}
			},
			error: function() {
				alert("请求失败");
			}
		}); //ajax

	}); //click  
} //addPlugin

/*------------------------------四:添加插件版本-----------------------------------*/

function addPluginVersion() {

	var json = getInputName("#addVersionForm");
	var pluginId = $("#fileName", parent.document).attr("pluginId");
	json["pluginId"] = pluginId;

	//ajaxSonsubmit会自动获取input内容
	$(".inputSubmit").on("click", function() {
		$("#addVersionForm").ajaxSubmit({
			type: 'post',
			url: addPluginVersionUrl,
			//这里需要一个pluginId
			data: {
				"pluginId": pluginId
			},
			success: function(data) {
				var sure = confirm("上传成功,继续上传?");
				if(!sure) {
					history.back();
				}
			},
			error: function(XmlHttpRequest, textStatus, errorThrown) {
				alert("上传失败");
			}
		}); //ajax

	}); //onclick
} //addPluginVersion
/*-----------------------------设备类型管理------------------------------------------*/

/*-----------------------------查询设备类型-----------------------------------------*/
function device() {
	$.ajax({
		type: "get",
		url: allDeviceUrl,
		async: true,
		success: deviceSuccess,
		error: function() {
	          	alert("加载失败尝试刷新页面");
		}
	}); //ajax
/*
	var data = {
		"ret": 0,
		"values": [{
			"dataModelId": "1",
			"manufacture": 'xxxxx',
			" manufactureDataModelId": 'xxxxx',
			"devDesc": "xxxxxxxx",
			"jsonIsExist": 1,
			"pluginId": '2',
			"firmwareId": '3'
		}, {
			"dataModelId": "2",
			"manufacture": 'xxxxx',
			"manufactureDataModelId": 'xxxxx',
			"devDesc": "xxxxxxxx",
			"jsonIsExist": 1,
			"pluginId": '1',
			"firmwareId": '1'
		}]
	};
*/
   function deviceSuccess(data){
//alert(data);
        var data1 = JSON.parse(data);
	var arr = data1.values;
	addCell("#table", "#cell", arr);
/*---------------------------------------删除设备------------------------------------*/
	$(".pluginDelete").on("click", function(){
		var dataModelId = $(this).parent().siblings("[name='dataModelId']").text();
		
		var dataD = {"dataModelId":dataModelId};
		var sure = confirm("确定删除吗?");
		if(sure) {
			$.ajax({
				type: "post",
				url: deleteDeviceUrl,
				async: true,
				data:dataD,
				success:function(){
                                
			        alert("删除成功");
                                window.location.reload();
				},
				error:function(){
					alert("删除失败");
				},
                                timeout:3000
				
			});//ajax
		}//if
	});
/*------------------------------------查看详情-------------------------------------------*/	
	$(".pluginVersion").on("click",function(){


		
	var data = getDataFromEle("#cell",this,"name");
        var dataStr = JSON.stringify(data); alert(dataStr);	
	window.sessionStorage.deviceDataStr = dataStr;
		
		
	});
	
}//success
} //device

/*--------------------------------------添加设备------------------------------------*/
function addDevice() {
	
/*--------------------------------------获取所有插件供选择-----------------------------*/
	$.ajax({
		type: "get",
		url: allPluginUrl,
		async: true,
		success: function(data) {
                        //alert(data);
                        var data1 = JSON.parse(data);
			var arr = data1.values;
			addCell("#tablePlugin", "#cellPlugin", arr);
		},
		error: function() {
			//			alert("加载失败尝试刷新页面");
		}
	}); //ajax

/*
	var data = {
		"ret": 0,
		"values": [{
			"pluginId": "6",
			"pluginName": '1',
			"pluginDesc": '加载的插件描述'
		}, {
			"pluginId": "9",
			"pluginName": '2',
			"pluginDesc": 'xxxxx'
		}, {
			"pluginId": "7",
			"pluginName": '3',
			"pluginDesc": 'xxxxx'
		}]
	};

	var arr = data.values;
	addCell("#tablePlugin", "#cellPlugin", arr);  
*/
/*-------------------------------提交按钮点击----------------------------------*/
$(".inputSubmit").on("click",function(){
	
/*----------------------------提交设备信息获取id-------------------------------*/
var thisData = getInputName("#addDevice");

$.ajax({
	type:"post",
	url:addDeviceUrl,
	data:thisData,
	async:true,
	success:function(data){
alert("1成功");
		/*----------------上传dataModel文件----------------*/
                var data1 = JSON.parse(data);
		var dataModelId = data1.dataModelId;
	    $("#addDataModel").ajaxSubmit({
			type: 'post',
			url: addDataModelUrl,
			data: {
				"dataModelId":dataModelId
			},
			success: function(data) {
alert("2成功");
		   /*--------------选择插件----------------*/
		      var pluginId  = $("#tablePlugin").val();

		      var dataP = {"pluginId":pluginId,"dataModelId":dataModelId};
		      $.ajax({
		      	type:"post",
		      	url:addDevicePluginUrl,
		      	data:dataP,
		      	async:true,
		      	success:function(data){
		      		alert("添加插件成功");
		      	},
		      	error:function(){
		      		alert("3添加插件失败");
		      	}
		      });
		  
		  /*---------------选择插件---------------*/
			},
			error: function() {
				alert("2上传失败");
			}
		}); //ajaxsubmit
		/*--------------------------------*/
	    
	},//success
	error:function(){
		alert("1上传失败");
	}
});//deviceAjax
	
	
});//click



}
/*---------------------------------设备详情/固件----------------------------------------*/
function deviceDetail(){
	//获取上页传值
    var data = window.sessionStorage.deviceDataStr;
//alert(data);
    var deviceData = JSON.parse(data);
    var firmwareId = deviceData['firmwareId'];
/*-------------------------------获取设备详细信息--------------------------------------*/  
    for(var key in deviceData){
    	$("#cellDetail").find("[name="+key+"]").text(deviceData[key]);
    }
/*--------------------------------加载固件版本信息--------------------------------------*/
	var data = {"firmwareId":firmwareId};
	$.ajax({
		type:"post",
		url:queryPluginUrl,
		async:true,
		data:data,
		success:function(data){
			alert("查询固件版本成功");
		},
		error:function(){
			alert("查询固件版本失败");
		}
	});
/*
	var data = {
		"firmwareId": "1",
		"ret": 0,
		"publishVersion": 'V1.0.2',
		"values": [{
			"version": 'V1.0.1',
			"changeLog": null,
			"createTime": null,
			"md5": 'xxxxxxx'
		}, {
			"version": 'V1.0.2',
			"changeLog": null,
			"createTime": null,
			"md5": 'xxxxxxx'
		}]
	};
*/
	var arr = data.values;
	var publishVersion = data.publishVersion;
	var firmwareId = data.firmwareId;
	addCell2("#tableFirmware","#cellFirmware",arr,publishVersion);

	/*--------------------------------------删除固件版本----------------------------*/
	$(".pluginDelete").on("click", function() {
		var version = $(this).parent().siblings("[name='version']").text();
		var thisdata = {
			"firmwareId": firmwareId,
			"version": version
		};
		var sure = confirm("确定删除");
		if(sure){
		$.ajax({
			type: "post",
			url: deleteFirmwareVersionUrl,
			async: true,
			data: thisdata,
			success: function() {
				window.location.reload();
			},
			error: function() {
				alert("删除失败!");
			}

		});//ajax
	  }//if
	});
	/*三：---------------------------------发布固件版本----------------------------------*/
	$(".pluginVersion").on("click", function() {
		if($(this).text() == "在线") {
			alert("此版本已发布");
			return;
		}
		var sure = confirm("确定发布?");
		if(sure) {
			var version = $(this).parent().siblings("[name='version']").text();
			var thisdata = {
				"firmwareId": firmwareId,
				"version": version
			};
			$.ajax({
				type: "post",
				url: publishFirmwareVersionUrl,
				async: true,
				data: thisdata,
				success: function() {
					window.location.reload();
				},
				error: function() {
					alert("发布失败请重试!");
				}
			});
		} //if
	});

}//deviceDetail


/*------------------------------四:添加固件版本-----------------------------------*/


function addFirmwareVersion() {

    var firmwareId  = window.sessionStorage.firmwareId;
	$(".inputSubmit").on("click", function() {
		$("#addVersionForm").ajaxSubmit({
			type: 'post',
			url: addFirmwareVersionUrl,
			data:{
				"firmwareId":firmwareId
			},
			success: function(data) {
				var sure = confirm("上传成功继续上传?");
				if(!sure){
					history.back();
				}
			},
			error:function(){
				alert("失败");
			}
		}); //ajax
	}); //onclick
} //addPluginVersion
